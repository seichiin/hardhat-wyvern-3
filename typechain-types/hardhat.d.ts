/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Exchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Exchange__factory>;
    getContractFactory(
      name: "ExchangeCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExchangeCore__factory>;
    getContractFactory(
      name: "ERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1271__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "AuthenticatedProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuthenticatedProxy__factory>;
    getContractFactory(
      name: "OwnableDelegateProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableDelegateProxy__factory>;
    getContractFactory(
      name: "OwnedUpgradeabilityProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnedUpgradeabilityProxy__factory>;
    getContractFactory(
      name: "OwnedUpgradeabilityStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnedUpgradeabilityStorage__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyRegistry__factory>;
    getContractFactory(
      name: "ProxyRegistryInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyRegistryInterface__factory>;
    getContractFactory(
      name: "TokenRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenRecipient__factory>;
    getContractFactory(
      name: "StaticERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StaticERC1155__factory>;
    getContractFactory(
      name: "StaticERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StaticERC20__factory>;
    getContractFactory(
      name: "StaticERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StaticERC721__factory>;
    getContractFactory(
      name: "StaticUtil",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StaticUtil__factory>;
    getContractFactory(
      name: "StaticMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StaticMarket__factory>;
    getContractFactory(
      name: "TestAuthenticatedProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestAuthenticatedProxy__factory>;
    getContractFactory(
      name: "TestERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC1155__factory>;
    getContractFactory(
      name: "TestERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC1271__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "TestERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC721__factory>;
    getContractFactory(
      name: "ExchangeInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExchangeInterface__factory>;
    getContractFactory(
      name: "ProxyInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyInterface__factory>;
    getContractFactory(
      name: "TestSmartContractWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestSmartContractWallet__factory>;
    getContractFactory(
      name: "WyvernExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WyvernExchange__factory>;
    getContractFactory(
      name: "WyvernRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WyvernRegistry__factory>;
    getContractFactory(
      name: "WyvernStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WyvernStatic__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;

    getContractAt(
      name: "Exchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Exchange>;
    getContractAt(
      name: "ExchangeCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExchangeCore>;
    getContractAt(
      name: "ERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1271>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "AuthenticatedProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AuthenticatedProxy>;
    getContractAt(
      name: "OwnableDelegateProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableDelegateProxy>;
    getContractAt(
      name: "OwnedUpgradeabilityProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnedUpgradeabilityProxy>;
    getContractAt(
      name: "OwnedUpgradeabilityStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnedUpgradeabilityStorage>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyRegistry>;
    getContractAt(
      name: "ProxyRegistryInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyRegistryInterface>;
    getContractAt(
      name: "TokenRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenRecipient>;
    getContractAt(
      name: "StaticERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StaticERC1155>;
    getContractAt(
      name: "StaticERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StaticERC20>;
    getContractAt(
      name: "StaticERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StaticERC721>;
    getContractAt(
      name: "StaticUtil",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StaticUtil>;
    getContractAt(
      name: "StaticMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StaticMarket>;
    getContractAt(
      name: "TestAuthenticatedProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestAuthenticatedProxy>;
    getContractAt(
      name: "TestERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC1155>;
    getContractAt(
      name: "TestERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC1271>;
    getContractAt(
      name: "TestERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20>;
    getContractAt(
      name: "TestERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC721>;
    getContractAt(
      name: "ExchangeInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExchangeInterface>;
    getContractAt(
      name: "ProxyInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyInterface>;
    getContractAt(
      name: "TestSmartContractWallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestSmartContractWallet>;
    getContractAt(
      name: "WyvernExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WyvernExchange>;
    getContractAt(
      name: "WyvernRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WyvernRegistry>;
    getContractAt(
      name: "WyvernStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WyvernStatic>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
